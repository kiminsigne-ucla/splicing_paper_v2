source('~/g/splicing_paper/figures/supp_figure/data/passaging/Cq/cq_reporter.R', echo=TRUE)
source('~/g/splicing_paper/figures/supp_figure/data/passaging/Cq/cq_reporter.R', echo=TRUE)
source('~/g/splicing_paper/figures/supp_figure/data/passaging/Cq/cq_reporter.R', echo=TRUE)
source('~/g/splicing_paper/figures/supp_figure/data/passaging/Cq/cq_reporter.R', echo=TRUE)
source('~/g/splicing_paper/figures/supp_figure/data/passaging/Cq/cq_reporter.R', echo=TRUE)
source('~/g/splicing_paper/figures/supp_figure/data/passaging/Cq/cq_reporter.R', echo=TRUE)
View(df)
source('~/g/splicing_paper/figures/supp_figure/data/passaging/Cq/cq_reporter.R', echo=TRUE)
View(df)
source('~/g/splicing_paper/figures/supp_figure/data/passaging/Cq/cq_reporter.R', echo=TRUE)
source('~/g/splicing_paper/figures/supp_figure/data/passaging/Cq/cq_reporter.R', echo=TRUE)
source('~/g/splicing_paper/figures/supp_figure/data/passaging/Cq/cq_reporter.R', echo=TRUE)
source('~/g/splicing_paper/figures/supp_figure/data/passaging/Cq/cq_reporter.R', echo=TRUE)
source('~/g/splicing_paper/figures/supp_figure/data/passaging/Cq/cq_reporter.R', echo=TRUE)
source('~/g/splicing_paper/figures/supp_figure/data/passaging/Cq/cq_reporter.R', echo=TRUE)
source('~/g/splicing_paper/figures/supp_figure/data/passaging/Cq/cq_reporter.R', echo=TRUE)
source('~/g/splicing_paper/figures/supp_figure/data/passaging/Cq/cq_reporter.R', echo=TRUE)
source('~/g/splicing_paper/figures/supp_figure/data/passaging/Cq/cq_reporter.R', echo=TRUE)
source('~/g/splicing_paper/figures/supp_figure/data/passaging/Cq/cq_reporter.R', echo=TRUE)
source('~/g/splicing_paper/figures/supp_figure/data/passaging/Cq/cq_reporter.R', echo=TRUE)
source('~/g/splicing_paper/figures/supp_figure/data/passaging/Cq/cq_reporter.R', echo=TRUE)
source('~/g/splicing_paper/figures/supp_figure/data/passaging/Cq/cq_reporter.R', echo=TRUE)
source('~/g/splicing_paper/figures/supp_figure/data/passaging/Cq/cq_reporter.R', echo=TRUE)
source('~/g/splicing_paper/figures/supp_figure/data/passaging/Cq/cq_reporter.R', echo=TRUE)
source('~/g/splicing_paper/figures/supp_figure/data/passaging/Cq/cq_reporter.R', echo=TRUE)
source('~/g/splicing_paper/figures/supp_figure/data/passaging/Cq/cq_reporter.R', echo=TRUE)
source('~/g/splicing_paper/figures/supp_figure/data/passaging/Cq/cq_reporter.R', echo=TRUE)
summary %>%
ggplot(aes(x=sample, y=Mean, fill=sample)) +
geom_bar(width = 0.425, stat="identity", colour="black") +
geom_errorbar(width = 0.375, aes(ymin=Mean, ymax=Mean+se)) +
xlim("1:100\npassage", "1:1000\npassage", "1:4000\npassage", "1:100,000\npassage", "genome-\nintegrated", "negative") +
theme(plot.title = element_text(hjust = 0.5, size=22),
panel.background = element_blank(),
axis.text.y = element_text(size = 20),
axis.text.x = element_text(size = 18),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_rect(colour=NA),
legend.position="none") + xlab("") +
ylab("Normalized\nreporter copy number (log2)") +
scale_y_continuous(trans='log2')
ggsave('Cq.svg', width = 8, height = 8)
source('~/g/splicing_paper/figures/supp_figure/data/passaging/Cq/cq_reporter.R', echo=TRUE)
summary %>%
ggplot(aes(x=sample, y=Mean, fill=sample)) +
geom_bar(width = 0.425, stat="identity", colour="black") +
geom_errorbar(width = 0.375, aes(ymin=Mean, ymax=Mean+se)) +
xlim("1:100\npassage", "1:1000\npassage", "1:4000\npassage", "1:100,000\npassage", "genome-\nintegrated", "negative") +
theme(plot.title = element_text(hjust = 0.5, size=22),
panel.background = element_blank(),
axis.text.y = element_text(size = 20),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_rect(colour=NA),
legend.position="none") + xlab("") +
ylab("Normalized\nreporter copy number (log2)") +
scale_y_continuous(trans='log2')
ggsave('Cq.svg', width = 8, height = 8)
summary %>%
ggplot(aes(x=sample, y=Mean, fill=sample)) +
geom_bar(width = 0.425, stat="identity", colour="black") +
geom_errorbar(width = 0.375, aes(ymin=Mean, ymax=Mean+se)) +
xlim("1:100\npassage", "1:1000\npassage", "1:4000\npassage", "1:100,000\npassage", "genome-\nintegrated", "negative") +
theme(plot.title = element_text(hjust = 0.5, size=22),
panel.background = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_rect(colour=NA),
legend.position="none") + xlab("") +
ylab("Normalized\nreporter copy number (log2)") +
scale_y_continuous(trans='log2')
ggsave('Cq.svg', width = 8, height = 8)
summary %>%
ggplot(aes(x=sample, y=Mean, fill=sample)) +
geom_bar(width = 0.425, stat="identity", colour="black") +
geom_errorbar(width = 0.375, aes(ymin=Mean, ymax=Mean+se)) +
xlim("1:100\npassage", "1:1000\npassage", "1:4000\npassage", "1:100,000\npassage", "genome-\nintegrated", "negative") +
theme(plot.title = element_text(hjust = 0.5, size=22),
panel.background = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_rect(colour=NA),
legend.position="none") + xlab("") +
ylab("Normalized\nreporter copy number (log2)") +
scale_y_continuous(trans='log2')
ggsave('Cq.svg', width = 6, height = 8)
summary %>%
ggplot(aes(x=sample, y=Mean, fill=sample)) +
geom_bar(width = 0.425, stat="identity", colour="black") +
geom_errorbar(width = 0.375, aes(ymin=Mean, ymax=Mean+se)) +
xlim("1:100\npassage", "1:1000\npassage", "1:4000\npassage", "1:100,000\npassage", "genome-\nintegrated", "negative") +
theme(plot.title = element_text(hjust = 0.5, size=22),
panel.background = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_rect(colour=NA),
legend.position="none") + xlab("") +
ylab("Normalized\nreporter copy number (log2)") +
scale_y_continuous(trans='log2')
ggsave('Cq.svg', width = 4, height = 8)
summary %>%
ggplot(aes(x=sample, y=Mean, fill=sample)) +
geom_bar(width = 0.6, stat="identity", colour="black") +
geom_errorbar(width = 0.4, aes(ymin=Mean, ymax=Mean+se)) +
xlim("1:100\npassage", "1:1000\npassage", "1:4000\npassage", "1:100,000\npassage", "genome-\nintegrated", "negative") +
theme(plot.title = element_text(hjust = 0.5, size=22),
panel.background = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_rect(colour=NA),
legend.position="none") + xlab("") +
ylab("Normalized\nreporter copy number (log2)") +
scale_y_continuous(trans='log2')
ggsave('Cq.svg', width = 4, height = 8)
summary %>%
ggplot(aes(x=sample, y=Mean, fill=sample)) +
geom_bar(width = 0.8, stat="identity", colour="black") +
geom_errorbar(width = 0.6, aes(ymin=Mean, ymax=Mean+se)) +
xlim("1:100\npassage", "1:1000\npassage", "1:4000\npassage", "1:100,000\npassage", "genome-\nintegrated", "negative") +
theme(plot.title = element_text(hjust = 0.5, size=22),
panel.background = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_rect(colour=NA),
legend.position="none") + xlab("") +
ylab("Normalized\nreporter copy number (log2)") +
scale_y_continuous(trans='log2')
ggsave('Cq.svg', width = 6, height = 8)
source('~/splicing_paper/process_scripts/exac/exac_graph_fig4_func_annot.R', echo=TRUE)
getwd()
..
setwd("/Users/martian/g/splicing_paper/process_scripts/exac")
setwd("~/splicing_paper/process_scripts/exac")
source('~/splicing_paper/process_scripts/exac/exac_graph_fig4_func_annot.R', echo=TRUE)
data$AF_bin
data$AF
table(data$AF)
table(data$AF_bin)
data_lof <- data %>%
filter(v2_dpsi <= -0.5) %>%
mutate(AF_bin = cut(AF,
breaks = c(0, 0.00001, 0.000025, 0.0001, 0.001, 1),
include.lowest = T,
labels = c('Singleton', 'AC = 2-3',
'AC = 4-10', '0.01%', '>0.1%' )))
table(data_lof$AF_bin)
source('~/splicing_paper/process_scripts/exac/exac_graph_fig4_func_annot.R', echo=TRUE)
fig4d <- data %>%
filter(!is.na(AF_bin)) %>%
ggplot(aes(AF_bin, v2_dpsi)) +
geom_jitter(alpha = 0.25, aes(color = nat_v2_index), width = 0.35) +
scale_colour_gradientn(limits = c(-0.005,1),
breaks=seq(0,1, by = 0.25),
colors=pal(321),
expression(index["WT "])) +
geom_violin(alpha = 0, color = "grey10", size = 0.5) +
stat_summary(fun.y = median, geom = "point", size = 1, color = "grey10") +
labs(x = "ExAC global allele frequency",
y = expression(paste(Delta, ' inclusion index'))) +
theme_bw() +
theme(legend.position = 'none',
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(fill = NA, color = "grey50"),
axis.title.y = element_text(size = 17, vjust = 12),
axis.title.x = element_text(size = 17, vjust = -0.5),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 10, color = "grey20"),
axis.text.x = element_blank())
ggsave(paste0("../../figs/exac/exac_fig4D_allele_frequency_binned_no_label", plot_format),
width = 4, height = 3, units = 'in', dpi = hi_res)
fig4d <- data %>%
filter(!is.na(AF_bin)) %>%
ggplot(aes(AF_bin, v2_dpsi)) +
geom_jitter(alpha = 0.25, aes(color = nat_v2_index), width = 0.35) +
scale_colour_gradientn(limits = c(-0.005,1),
breaks=seq(0,1, by = 0.25),
colors=pal(321),
expression(index["WT "])) +
geom_violin(alpha = 0, color = "grey10", size = 0.5) +
stat_summary(fun.y = median, geom = "point", size = 1, color = "grey10") +
labs(x = "ExAC global allele frequency",
y = expression(paste(Delta, ' inclusion index'))) +
theme_bw() +
theme(legend.position = 'none',
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(fill = NA, color = "grey50"),
axis.title.y = element_text(size = 17, vjust = 12),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 10, color = "grey20"),
axis.text.x = element_blank())
ggsave(paste0("../../figs/exac/exac_fig4D_allele_frequency_binned_no_label", plot_format),
width = 4, height = 3, units = 'in', dpi = hi_res)
summary(data$AF)
data$AF %>% nrow()
View(data)
data %>% filter(!is.na(AF)) %>% nrow()
View(data)
table(data$AF)
table(data$AF_bin)
fig4d <- data %>%
filter(!is.na(AF_bin)) %>%
ggplot(aes(AF_bin, v2_dpsi)) +
geom_jitter(alpha = 0.25, aes(color = nat_v2_index), width = 0.35) +
scale_colour_gradientn(limits = c(-0.005,1),
breaks=seq(0,1, by = 0.25),
colors=pal(321),
expression(index["WT "])) +
geom_violin(alpha = 0, color = "grey10", size = 0.5) +
stat_summary(fun.y = median, geom = "point", size = 1, color = "grey10") +
labs(x = "ExAC global allele frequency",
y = expression(paste(Delta, ' inclusion index'))) +
theme_bw() +
theme(legend.position = 'none',
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(fill = NA, color = "grey50"),
axis.title.y = element_text(size = 17, vjust = 12),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 10, color = "grey20"),
axis.text.x = element_blank())
ggsave(paste0("../../figs/exac/exac_fig4D_allele_frequency_binned_no_label", plot_format),
width = 4, height = 2.5, units = 'in', dpi = hi_res)
fig4d <- data %>%
filter(!is.na(AF_bin)) %>%
ggplot(aes(AF_bin, v2_dpsi)) +
geom_jitter(alpha = 0.25, aes(color = nat_v2_index), width = 0.35) +
scale_colour_gradientn(limits = c(-0.005,1),
breaks=seq(0,1, by = 0.25),
colors=pal(321),
expression(index["WT "])) +
geom_violin(alpha = 0, color = "grey10", size = 0.5) +
stat_summary(fun.y = median, geom = "point", size = 1, color = "grey10") +
labs(x = "ExAC global allele frequency",
y = expression(paste(Delta, ' inclusion index'))) +
theme_bw() +
theme(legend.position = 'none',
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(fill = NA, color = "grey50"),
axis.title.y = element_text(size = 17, vjust = 12),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 10, color = "grey20"),
axis.text.x = element_blank())
ggsave(paste0("../../figs/exac/exac_fig4D_allele_frequency_binned_no_label", plot_format),
width = 4, height = 2.25, units = 'in', dpi = hi_res)
View(data)
source('~/splicing_paper/process_scripts/splicemod/splicemod_graph_categories.R', echo=TRUE)
View(data)
source('~/splicing_paper/process_scripts/splicemod/splicemod_graph_categories.R', echo=TRUE)
View(sdv_by_category_dhfr)
View(sdv_by_category_smn1)
source('~/splicing_paper/process_scripts/splicemod/splicemod_graph_categories.R', echo=TRUE)
View(sdv_by_category_smn1)
View(sdv_by_category_dhfr)
View(sdv_by_category_dhfr)
View(sdv_by_category_smn1)
View(sdv_by_category_dhfr)
View(data)
source('~/splicing_paper/process_scripts/exac/exac_graph_fig4_func_annot.R', echo=TRUE)
data %>% filter(category == 'natural')
data_nat <- data %>% filter(category == 'natural')
table(data_nat)
table(data_nat$v2_index)
summary(data_nat$v2_index)
data_nat %>% filter(v2_index >= 0.5) %>% summarise(count = n_distinct(ensembl_id))
View(data_cons)
source('~/splicing_paper/process_scripts/exac/exac_data_clean.R', echo=TRUE)
data <- data_all %>%
group_by(ensembl_id) %>%
# mutant must have corresponding natural that passed previous filters
filter(any(sub_id == '000')) %>%
# calculate dPSI
mutate(nat_v1_index_R1 = v1_index_R1[sub_id == '000'],
nat_v1_index_R2 = v1_index_R2[sub_id == '000'],
nat_v2_index_R1 = v2_index_R1[sub_id == '000'],
nat_v2_index_R2 = v2_index_R2[sub_id == '000'],
v1_dpsi_R1 = v1_index_R1 - nat_v1_index_R1,
v1_dpsi_R2 = v1_index_R2 - nat_v1_index_R2,
v2_dpsi_R1 = v2_index_R1 - nat_v2_index_R1,
v2_dpsi_R2 = v2_index_R2 - nat_v2_index_R2,
nat_v1_index = (nat_v1_index_R1 + nat_v1_index_R2) / 2,
nat_v2_index = (nat_v2_index_R1 + nat_v2_index_R2) / 2,
nat_seq = original_seq[sub_id == '000']) %>%
filter(abs(nat_v2_index_R1 - nat_v2_index_R2) <= rep_agreement) %>%
ungroup()
data <- data %>%
rowwise() %>%
mutate(v1_dpsi = mean(c(v1_dpsi_R1, v1_dpsi_R2)),
v2_dpsi = mean(c(v2_dpsi_R1, v2_dpsi_R2)),
delta_dpsi = abs(v1_dpsi - v2_dpsi) ) %>%
ungroup()
data_final <- data %>%
filter(nat_v2_index >= 0.5)
data_final <- data %>%
filter(nat_v2_index >= 0.5, category == 'mutant')
data_final <- data %>%
filter(nat_v2_index >= 0.5, category == 'mutant')
data_final
data %>% filter(category == 'natural') %>% summarise(count = n_distinct(ensembl_id))
data %>% filter(category == 'natural', nat_index_v2 >= 0.5) %>% summarise(count = n_distinct(ensembl_id))
data %>% filter(category == 'natural', nat_v2_index >= 0.5) %>% summarise(count = n_distinct(ensembl_id))
source('~/splicing_paper/process_scripts/splicemod/splicemod_graph_categories.R', echo=TRUE)
source('~/splicing_paper/process_scripts/splicemod/splicemod_graph_categories.R', echo=TRUE)
View(num_changes_summary)
source('~/splicing_paper/process_scripts/exac/exac_graph_fig4_func_annot.R', echo=TRUE)
fisher.test(df, alternative = 'two.sided')
fisher.test(cons_count, alternative = 'two.sided')
cons_count
df
