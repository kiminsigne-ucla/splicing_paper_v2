getwd()
setwd("~/splicing_paper/process_scripts/exac")
load_pkgs <- function(pkgs){
new_pkgs <- pkgs[!(pkgs %in% installed.packages()[, 'Package'])]
if(length(new_pkgs)) install.packages(new_pkgs)
for(pkg in pkgs){
suppressWarnings(suppressMessages(library(pkg, character.only = T)))
}
}
pkgs <- c('dplyr', 'tidyr', 'ggplot2', 'cowplot', 'weights')
load_pkgs(pkgs)
options(stringsAsFactors = F, warn = -1, warnings = -1)
hi_res <- 300
plot_format <- '.png'
exac_v1 <- read.csv('../../processed_data/exac/exac_v1_all_alignments.csv') %>%
select(-ends_with('S1')) %>%
rename(DP_R1 = DP1S2, DP_R2 = DP2S2, INT_R1 = INT1S2, INT_R2 = INT2S2,
PS_R1 = R1.PS, PS_R2 = R2.PS, SP_R1 = SP1S2, SP_R2 = SP2S2)
exac_v1 <- exac_v1 %>%
select(-id) %>%
mutate_all(funs(norm = . / (sum(.) / 1000000))) %>%
bind_cols(select(exac_v1, id), .)
bin_prop <- c(0.092, 0.091, 0.127, 0.122, 1, 1, 0.596, 0.603)
# multiply each bin count by bin proportion
exac_v1 <- bind_cols(select(exac_v1, header = id, DP_R1:SP_R2),
data.frame(mapply(`*`, select(exac_v1, DP_R1_norm:SP_R2_norm),
bin_prop, SIMPLIFY = FALSE)))
exac_v2 <- read.csv('../../processed_data/exac/exac_v2_all_alignments.csv')
exac_v2 <- exac_v2 %>%
select(Hi.R1:Lo.R2) %>%
mutate_all(funs(norm = . / (sum(., na.rm = T) / 1000000))) %>%
bind_cols(select(exac_v2, id), .)
bin_prop <- c(0.070, 0.075, 0.029, 0.032, 0.032, 0.033, 0.227, 0.252)
# multiply each bin count by bin proportion
exac_v2 <- bind_cols(select(exac_v2, header = id, Hi.R1:Lo.R2),
data.frame(mapply(`*`, select(exac_v2, Hi.R1_norm:Lo.R2_norm),
bin_prop, SIMPLIFY = FALSE)))
hi_read_threshold <- 10
rep_agreement <- 0.20
# read filter
exac_v1 <- exac_v1 %>%
mutate(v1_R1_sum = DP_R1 + INT_R1 + SP_R1,
v1_R2_sum = DP_R2 + INT_R2 + SP_R2) %>%
filter(v1_R1_sum >= hi_read_threshold, v1_R2_sum >= hi_read_threshold)
exac_v2 <- exac_v2 %>%
mutate(v2_R1_sum = Hi.R1 + IntHi.R1 + IntLo.R1 + Lo.R1,
v2_R2_sum = Hi.R2 + IntHi.R2 + IntLo.R2 + Lo.R2) %>%
filter(v2_R1_sum >= hi_read_threshold, v2_R2_sum >= hi_read_threshold)
print(paste("Number of sequences after read filter (v1, v2):",
nrow(exac_v1), nrow(exac_v2)))
exac_v1 <- exac_v1 %>%
# calculate index
mutate(v1_index_R1 = (DP_R1_norm * 0 + INT_R1_norm * 0.85 + SP_R1_norm * 1) /
(DP_R1_norm + INT_R1_norm + SP_R1_norm),
v1_R1_norm = DP_R1_norm + INT_R1_norm + SP_R1_norm,
v1_index_R2 = (DP_R2_norm * 0 + INT_R2_norm * 0.85 + SP_R2_norm * 1) /
(DP_R2_norm + INT_R2_norm + SP_R2_norm),
v1_R2_norm = DP_R2_norm + INT_R2_norm + SP_R2_norm,
v1_norm = v1_R1_norm + v1_R2_norm) %>%
# rep agreement
filter(abs(v1_index_R1 - v1_index_R2) <= rep_agreement)
exac_v2 <- exac_v2 %>%
mutate(v2_index_R1 = (Hi.R1_norm * 0 + IntHi.R1_norm * 0.80 + IntLo.R1_norm * 0.95 + Lo.R1_norm * 1) /
(Hi.R1_norm + IntHi.R1_norm + IntLo.R1_norm + Lo.R1_norm),
v2_R1_norm = Hi.R1_norm + IntHi.R1_norm + IntLo.R1_norm + Lo.R1_norm,
v2_index_R2 = (Hi.R2_norm * 0 + IntHi.R2_norm * 0.80 + IntLo.R2_norm * 0.95 + Lo.R2_norm * 1) /
(Hi.R2_norm + IntHi.R2_norm + IntLo.R2_norm + Lo.R2_norm),
v2_R2_norm = Hi.R2_norm + IntHi.R2_norm + IntLo.R2_norm + Lo.R2_norm,
v2_norm = v2_R1_norm + v2_R2_norm)
exac_v2 <- exac_v2 %>%
mutate(v2_index_R1 = (Hi.R1_norm * 0 + IntHi.R1_norm * 0.80 + IntLo.R1_norm * 0.95 + Lo.R1_norm * 1) /
(Hi.R1_norm + IntHi.R1_norm + IntLo.R1_norm + Lo.R1_norm),
v2_R1_norm = Hi.R1_norm + IntHi.R1_norm + IntLo.R1_norm + Lo.R1_norm,
v2_index_R2 = (Hi.R2_norm * 0 + IntHi.R2_norm * 0.80 + IntLo.R2_norm * 0.95 + Lo.R2_norm * 1) /
(Hi.R2_norm + IntHi.R2_norm + IntLo.R2_norm + Lo.R2_norm),
v2_R2_norm = Hi.R2_norm + IntHi.R2_norm + IntLo.R2_norm + Lo.R2_norm,
v2_norm = v2_R1_norm + v2_R2_norm) %>%
# rep agreement
filter(abs(v2_index_R1 - v2_index_R2) <= rep_agreement)
source('~/splicing_paper/process_scripts/exac/exac_data_clean.R', echo=TRUE)
source('~/splicing_paper/process_scripts/exac/exac_data_clean.R', echo=TRUE)
source('~/splicing_paper/process_scripts/exac/exac_data_clean.R', echo=TRUE)
source('~/splicing_paper/process_scripts/exac/exac_data_clean.R', echo=TRUE)
corr <- wtd.cor(data_all$v1_index, data_all$v2_index, data_all$all_norm)
corr
# Correlation between v1 and v2
corr <- wtd.cor(data_all$v1_index, data_all$v2_index, data_all$all_norm)
gg <- ggplot(data_all, aes(v1_index, v2_index)) + geom_point(alpha = 0.25) +
scale_x_continuous(breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1)) +
scale_y_continuous(breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1)) +
labs(x = 'inclusion index (SNV library v1)',
y = 'inclusion index (SNV library v2)') +
theme(legend.position = 'none',
axis.title.x = element_text(size = 16, vjust = -2),
axis.title.y = element_text(size = 16, vjust = +4),
axis.text.x = element_text(size = 14, color = 'grey20'),
axis.text.y = element_text(size = 14, color = 'grey20'),
axis.ticks.x = element_line(color = 'grey50'),
axis.ticks.y = element_line(color = 'grey50'),
axis.line.x = element_line(color = 'grey50'),
axis.line.y = element_line(color = 'grey50'),
plot.margin = unit(c(2,2,3,3),"mm"))+
theme(legend.position = 'none') +
annotate('text', x = 0.95, y = 0.10, parse = T,
label = paste0('italic(r)==', signif(corr[1], 2)), size = 5) +
annotate('text', x = 0.96, y = 0.05, parse = T,
label = paste('italic(p) < 10^-16'), size = 5)
ggsave(paste0('../../figs/supplement/exac_v1_v2_replicates', plot_format),
gg, width = 6, height = 6)
corr
corr[1]
corr <- wtd.cor(exac_v2$v2_index_R1, exac_v2$v2_index_R2, exac_v2$v2_norm)
corr
exac_v2 <- exac_v2 %>%
mutate(v2_index_R1 = (Hi.R1_norm * 0 + IntHi.R1_norm * 0.80 +
IntLo.R1_norm * 0.95 + Lo.R1_norm * 1) /
(Hi.R1_norm + IntHi.R1_norm + IntLo.R1_norm + Lo.R1_norm),
v2_index_R2 = (Hi.R2_norm * 0 + IntHi.R2_norm * 0.80 +
IntLo.R2_norm * 0.95 + Lo.R2_norm * 1) /
(Hi.R2_norm + IntHi.R2_norm + IntLo.R2_norm + Lo.R2_norm),
v2_R1_norm = Hi.R1_norm +
IntHi.R1_norm + IntLo.R1_norm + Lo.R1_norm,
v2_R2_norm = Hi.R2_norm +
IntHi.R2_norm + IntLo.R2_norm + Lo.R2_norm,
v2_norm = v2_R1_norm + v2_R2_norm)
corr <- wtd.cor(exac_v2$v2_index_R1, exac_v2$v2_index_R2, exac_v2$v2_norm)
corr
source('~/splicing_paper/process_scripts/exac/exac_data_clean.R', echo=TRUE)
data_other %>%
bind_rows(filter(data, category == 'natural')) %>%
ggplot(aes(v2_index)) + geom_density(aes(fill = category), alpha = 0.5) +
scale_fill_discrete(labels = c('broken SD/SA control',
'wild-type sequences',
'random nucleotides',
'skipped control')) +
labs(x = 'inclusion index') +
scale_x_continuous(breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1))  +
theme(legend.position = c(0.40, 0.75),
legend.title = element_blank(),
axis.title.x = element_text(size = 20, vjust = -2),
axis.title.y = element_text(size = 20, vjust = +4),
axis.text.x = element_text(size = 14, color = 'grey20'),
axis.text.y = element_text(size = 14, color = 'grey20'),
axis.ticks.x = element_line(color = 'grey50'),
axis.ticks.y = element_line(color = 'grey50'),
axis.line.x = element_line(color = 'grey50'),
axis.line.y = element_line(color = 'grey50'),
plot.margin = unit(c(2,2,3,3),"mm"))
ggsave('../../figs/supplement/exac_controls.png', width = 4.5, height = 4,
units = 'in')
data_other %>%
bind_rows(filter(data, category == 'natural')) %>%
ggplot(aes(v2_index)) + geom_density(aes(fill = category), alpha = 0.5) +
scale_fill_discrete(labels = c('broken SD/SA control',
'wild-type sequences',
'random nucleotides',
'skipped control')) +
labs(x = 'inclusion index') +
scale_x_continuous(breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1))  +
theme(legend.position = c(0.40, 0.75),
legend.title = element_blank(),
axis.title.x = element_text(size = 20, vjust = -2),
axis.title.y = element_text(size = 20, vjust = +4),
axis.text.x = element_text(size = 14, color = 'grey20'),
axis.text.y = element_text(size = 14, color = 'grey20'),
axis.ticks.x = element_line(color = 'grey50'),
axis.ticks.y = element_line(color = 'grey50'),
axis.line.x = element_line(color = 'grey50'),
axis.line.y = element_line(color = 'grey50'),
plot.margin = unit(c(2,2,3,3),"mm"))
ggsave('../../figs/supplement/exac_controls', plot_format, width = 4.5, height = 4)
source('~/splicing_paper/process_scripts/exac/exac_data_clean.R', echo=TRUE)
source('~/splicing_paper/process_scripts/exac/exac_data_clean.R', echo=TRUE)
